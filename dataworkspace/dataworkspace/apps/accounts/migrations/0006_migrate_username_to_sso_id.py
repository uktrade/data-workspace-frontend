# Generated by Django 3.2.19 on 2023-05-12 13:40

from django.db import IntegrityError, migrations


def migrate_username_to_sso_id(apps, schema_editor):
    user_model = apps.get_model("auth", "User")
    profile_model = apps.get_model("accounts", "Profile")
    for user in user_model.objects.exclude(username__icontains="duplicate"):
        print(f"Migrating user {user.username}")
        if not profile_model.objects.filter(user=user).exists():
            print(f"Skipping user {user.username} as they have no profile")
            continue
        profile = profile_model.objects.get(user=user)
        if profile.sso_id is not None:
            if not user_model.objects.filter(username=profile.sso_id).exists():
                user.username = str(profile.sso_id)
                print(f"Saving user {user.username}")
                user.save()
            else:
                print(f"Skipping user {user.username} as they have duplicate accounts")
                continue
        print(f"User {user.username} migrated")


def unmigrate_username_to_sso_id(apps, schema_editor):
    user_model = apps.get_model("auth", "User")
    for user in user_model.objects.exclude(username__icontains="duplicate"):
        user.username = user.email
        try:
            user.save()
        except IntegrityError:
            print(f"Skipping user {user.email} as they have duplicate accounts")


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0005_alter_profile_user"),
    ]

    operations = [
        migrations.RunPython(
            migrate_username_to_sso_id, reverse_code=unmigrate_username_to_sso_id
        ),
    ]
