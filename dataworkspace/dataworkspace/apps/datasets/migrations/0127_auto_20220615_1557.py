# Generated by Django 3.2.13 on 2022-06-15 15:57

from django.contrib.postgres.search import SearchVector
from django.db import migrations, models


def generate_search_vectors_english(apps, schema_editor):
    # We can't import the models directly as it may be a newer
    # version than this migration expects. We use the historical version.
    DataSet = apps.get_model("datasets", "DataSet")
    ReferenceDataset = apps.get_model("datasets", "ReferenceDataset")
    VisualisationCatalogueItem = apps.get_model("datasets", "VisualisationCatalogueItem")

    for obj in DataSet.objects.all():
        tag_names = " ".join([x.name for x in obj.tags.all()])
        obj.search_vector_english_name = SearchVector("name", config="english")
        obj.search_vector_english_short_description = SearchVector(
            "short_description", config="english"
        )
        obj.search_vector_english_tags = SearchVector(models.Value(tag_names), config="english")
        obj.search_vector_english_description = SearchVector(
            "description", config="english"
        ) + SearchVector("acronyms", config="english")
        obj.save()

    for obj in ReferenceDataset.objects.all():
        tag_names = " ".join([x.name for x in obj.tags.all()])
        obj.search_vector_english_name = SearchVector("name", config="english")
        obj.search_vector_english_short_description = SearchVector(
            "short_description", config="english"
        )
        obj.search_vector_english_tags = SearchVector(models.Value(tag_names), config="english")
        obj.search_vector_english_description = SearchVector(
            "description", config="english"
        ) + SearchVector("acronyms", config="english")
        obj.save()

    for obj in VisualisationCatalogueItem.objects.all():
        tag_names = " ".join([x.name for x in obj.tags.all()])
        obj.search_vector_english_name = SearchVector("name", config="english")
        obj.search_vector_english_short_description = SearchVector(
            "short_description", config="english"
        )
        obj.search_vector_english_tags = SearchVector(models.Value(tag_names), config="english")
        obj.search_vector_english_description = SearchVector("description", config="english")
        obj.save()


class Migration(migrations.Migration):

    dependencies = [
        ("datasets", "0126_auto_20220614_1814"),
    ]

    operations = [migrations.RunPython(generate_search_vectors_english)]
