# Generated by Django 3.2.13 on 2022-05-25 08:54
from django.contrib.contenttypes.models import ContentType
from django.core import serializers
from django.db import migrations


def migrate_query_download_events(apps, _):
    """
    Migrate any old `TYPE_DATASET_CUSTOM_QUERY_DOWNLOAD_COMPLETE` event log events
    to point to the dataset rather than the source model.
    """
    eventlog_model = apps.get_model("eventlog", "EventLog")
    source_model = apps.get_model("datasets", "CustomDatasetQuery")
    for event in eventlog_model.objects.filter(event_type__in=[5, 22]).iterator():
        try:
            source = source_model.objects.get(id=event.object_id)
        except (source_model.DoesNotExist, ValueError):
            continue
        event.content_type_id = ContentType.objects.get_for_model(source.dataset).id
        event.object_id = source.dataset_id
        event.extra.update(**serializers.serialize("python", [source])[0])
        event.save()


class Migration(migrations.Migration):

    dependencies = [
        ("datasets", "0117_merge_20220426_1142"),
        ("eventlog", "0015_add_notification_event_types"),
    ]

    operations = [
        migrations.RunPython(migrate_query_download_events, migrations.RunPython.noop),
    ]
