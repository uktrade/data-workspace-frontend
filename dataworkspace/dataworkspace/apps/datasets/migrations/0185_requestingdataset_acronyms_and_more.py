# Generated by Django 4.2.18 on 2025-03-04 11:10

import dataworkspace.apps.core.models
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("datasets", "0184_requestingdataset"),
    ]

    operations = [
        migrations.AddField(
            model_name="requestingdataset",
            name="acronyms",
            field=models.CharField(blank=True, default="", max_length=255),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="authorized_email_domains",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=256),
                blank=True,
                default=list,
                help_text="Comma-separated list of domain names without spaces, e.g trade.gov.uk,fco.gov.uk",
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="average_unique_users_daily",
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="data_catalogue_editors",
            field=models.ManyToManyField(
                blank=True,
                related_name="requesting_data_ce",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="dictionary_published",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="eligibility_criteria",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=256), null=True, size=None
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="enquiries_contact",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="esda",
            field=models.BooleanField(
                default=False,
                verbose_name="Make this an ESDA (Essential Shared Data Asset)           and share metadata on this data asset with other departments.",
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="government_security_classification",
            field=models.IntegerField(
                blank=True,
                choices=[(1, "OFFICIAL"), (2, "OFFICIAL-SENSITIVE")],
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="grouping",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="datasets.datagrouping",
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="information_asset_manager",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requesting_data_iam",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="information_asset_owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requesting_data_iao",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="licence",
            field=models.CharField(
                blank=True, help_text="Licence description", max_length=256, null=True
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="licence_url",
            field=models.CharField(
                blank=True,
                help_text="Link to license (optional)",
                max_length=1024,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="notes",
            field=dataworkspace.apps.core.models.RichTextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="number_of_downloads",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="personal_data",
            field=models.TextField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="published",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="published_at",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="reference_code",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="datasets.datasetreferencecode",
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="request_approvers",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=256), null=True, size=None
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="restrictions_on_usage",
            field=dataworkspace.apps.core.models.RichLinkField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="retention_policy",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="search_vector_english",
            field=django.contrib.postgres.search.SearchVectorField(
                blank=True, null=True
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="search_vector_english_description",
            field=django.contrib.postgres.search.SearchVectorField(
                blank=True, null=True
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="search_vector_english_name",
            field=django.contrib.postgres.search.SearchVectorField(
                blank=True, null=True
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="search_vector_english_short_description",
            field=django.contrib.postgres.search.SearchVectorField(
                blank=True, null=True
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="search_vector_english_tags",
            field=django.contrib.postgres.search.SearchVectorField(
                blank=True, null=True
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="sensitivity",
            field=models.ManyToManyField(
                blank=True, null=True, to="datasets.sensitivitytype"
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="slug",
            field=models.SlugField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="tags",
            field=models.ManyToManyField(
                blank=True, related_name="+", to="datasets.tag"
            ),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="type",
            field=models.IntegerField(default=2),
        ),
        migrations.AddField(
            model_name="requestingdataset",
            name="user_access_type",
            field=models.CharField(
                choices=[
                    (
                        "OPEN",
                        "Everyone - for public data only, suitable to be shown in demos",
                    ),
                    ("REQUIRES_AUTHENTICATION", "All logged in users"),
                    (
                        "REQUIRES_AUTHORIZATION",
                        "Only specific authorized users or email domains",
                    ),
                ],
                default="REQUIRES_AUTHORIZATION",
                max_length=64,
            ),
        ),
    ]
