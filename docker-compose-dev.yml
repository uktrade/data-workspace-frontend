version: "3.4"
services:
  data-workspace:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    image: data-workspace
    ports:
      - "8000:8000"
      - "4444:4444"
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - AWS_SECURITY_TOKEN
    env_file: .envs/dev.env
    links:
      - "data-workspace-postgres"
      - "data-workspace-redis"
      - "data-workspace-es"
    volumes:
      - .:/app
      - ./dataworkspace:/dataworkspace
  data-workspace-celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    image: data-workspace
    env_file: .envs/dev.env
    links:
      - "data-workspace-postgres"
      - "data-workspace-redis"
    command: "/dataworkspace/start-celery-dev.sh"
    volumes:
      - ./dataworkspace:/dataworkspace
      - db-logs-dev:/var/log/postgres
  data-workspace-postgres:
    build:
      context: postgres
      dockerfile: Dockerfile
    image: data-workspace-postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data-dev:/var/lib/postgresql/data
      - db-logs-dev:/var/log/postgres
  data-workspace-redis:
    build:
      context: redis
      dockerfile: Dockerfile
    image: data-workspace-redis
    ports:
      - "6379:6379"
  data-workspace-es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
      - http.port=9200
    ports:
      - "9200:9200"


volumes:
  db-data-dev:
  db-logs-dev:
  
networks:
  default:
    external:
      name: data-infrastructure-shared-network
