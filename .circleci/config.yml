version: 2

jobs:
  docker-test-unit-js:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - run:
          name: Run lint and unit tests
          command: |
            cd ./dataworkspace/dataworkspace/static/js
             npm install
             npm run lint
             npm run test

  docker-test-unit:
    docker:
      - image: cimg/python:3.9
    parallelism: 4
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
          docker_layer_caching: true
      - run:
          name: Build docker containers
          command: |
            touch .envs/dev.env
            touch .envs/superset.dev.env
            make docker-build
      - run:
          name: Check all docker-test-unit-local migrations have been generated
          command: make docker-check-migrations
      - run:
          name: Run test
          command: |
            touch .envs/dev.env
            touch .envs/superset.dev.env
            make docker-test-unit TESTS="$(circleci tests glob 'dataworkspace/dataworkspace/tests/**/test_*.py' | circleci tests split --split-by=timings | tr '\n' ' ')"
            docker cp data-workspace-test-data-workspace-test-results-1:/test-results ./test-results
      - store_test_results:
          path: test-results

  docker-test-integration:
    docker:
      - image: cimg/python:3.9
    parallelism: 4
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
          docker_layer_caching: true
      - run:
          name: Build docker containers
          command: |
            touch .envs/dev.env
            touch .envs/superset.dev.env
            make docker-build
      - run:
          name: Run test
          command: |
            touch .envs/dev.env
            touch .envs/superset.dev.env
            make docker-test-integration TESTS="$(circleci tests glob 'test/**/test_*.py' | circleci tests split --split-by=timings | tr '\n' ' ')"
            docker cp data-workspace-test-data-workspace-test-results-1:/test-results ./test-results
      - store_test_results:
          path: test-results

  check-linting:
    docker:
      - image: cimg/python:3.9
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3.9-python-{{ checksum "requirements-dev.txt" }}-v4
      - run:
          name: Install requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements-dev.txt
      - save_cache:
          key: v3.9-python-{{ checksum "requirements-dev.txt" }}-v4
          paths:
            - "venv"
      - run:
          name: Run static checks
          command: |
            . venv/bin/activate
            make check

  docker-test-e2e:
    machine:
      image: default
      docker_layer_caching: true
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Copy sample config
          command: cp .envs/sample.env .envs/dev.env
      - run:
          name: Build docker containers
          command: |
            make docker-e2e-build
      - run:
          name: Run the e2e tests
          command: |
            make docker-e2e-run
      - store_artifacts:
          path: cypress/screenshots

  docker-test-a11y:
    machine:
      image: default
      docker_layer_caching: true
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Copy sample config
          command: cp .envs/sample.env .envs/dev.env
      - run:
          name: Build docker containers
          command: |
            make docker-a11y-build
      - run:
          name: Run the a11y tests
          command: |
            make docker-a11y-run
      - store_artifacts:
          path: cypress/screenshots

workflows:
  version: 2
  build:
    jobs:
      - docker-test-unit-js
      - docker-test-unit
      - docker-test-integration
      - check-linting
      - docker-test-e2e
      - docker-test-a11y
