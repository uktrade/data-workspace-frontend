# Generated by Django 2.1.2 on 2019-06-20 12:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0010_auto_20190617_1603'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataGrouping',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('short_description', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('audience', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataSet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField()),
                ('short_description', models.CharField(max_length=256)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('redactions', models.TextField(blank=True, null=True)),
                ('licence', models.CharField(blank=True, max_length=256, null=True)),
                ('volume', models.IntegerField()),
                ('retention_policy', models.TextField(blank=True, null=True)),
                ('personal_data', models.CharField(blank=True, max_length=128, null=True)),
                ('restrictions_on_usage', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResponsiblePerson',
            fields=[
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SourceLink',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('url', models.CharField(max_length=256)),
                ('format', models.CharField(max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('frequency', models.CharField(max_length=50)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.DataSet')),
            ],
        ),
        migrations.CreateModel(
            name='SourceSchema',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('schema', models.CharField(default='public', max_length=1024, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z][a-zA-Z0-9_\\.]*$')])),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.DataSet', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SourceTables',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('schema', models.CharField(default='public', max_length=1024, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z][a-zA-Z0-9_\\.]*$')])),
                ('tables', models.CharField(help_text='Comma-separated list of tables that can be accessed on this schema. "ALL TABLES" (without quotes) to allow access to all tables.', max_length=1024, validators=[django.core.validators.RegexValidator(regex='(([a-zA-Z][a-zA-Z0-9_\\.]*,?)+(?<!,)$)|(^ALL TABLES$)')])),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.DataSet')),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='enquiries_contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ResponsiblePerson'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='grouping',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.DataGrouping'),
        ),
        migrations.AddField(
            model_name='datagrouping',
            name='information_asset_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='asset_manager', to='app.ResponsiblePerson'),
        ),
        migrations.AddField(
            model_name='datagrouping',
            name='information_asset_owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='asset_owner', to='app.ResponsiblePerson'),
        ),
    ]
